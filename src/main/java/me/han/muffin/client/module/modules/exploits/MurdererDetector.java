package me.han.muffin.client.module.modules.exploits;

import me.han.muffin.client.core.Globals;
import me.han.muffin.client.event.EventStageable;
import me.han.muffin.client.event.events.client.UpdateEvent;
import me.han.muffin.client.manager.managers.ChatManager;
import me.han.muffin.client.module.Module;
import me.han.muffin.client.utils.timer.Timer;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.item.*;
import team.stiff.pomelo.impl.annotated.handler.annotation.Listener;

public class MurdererDetector extends Module {

    public MurdererDetector() {
        super("MurdererDetector", Category.EXPLOITS, "Detect murderer on hypixel Murder Mystery.");
    }

    Timer timer = new Timer();

    @Listener
    private void onPlayerUpdate(UpdateEvent event) {
        if (event.getStage() != EventStageable.EventStage.PRE) return;

        if (fullNullCheck()) return;

        for (EntityPlayer player : Globals.mc.world.playerEntities) {

            if (player == null) continue;

            if (player == Globals.mc.player) continue;

            if (player.isSpectator()) continue;

            if (!isMurderer(player)) continue;

            Item mainHandItem = player.getHeldItemMainhand().getItem();
            ItemStack mainStack = new ItemStack(mainHandItem);

            if (timer.passed(1000)) {
                ChatManager.sendMessage(player.getName() + " is murderer. Holding " + mainStack.getDisplayName());
                timer.reset();
            }

        }

    }

    public static boolean isMurderer(EntityPlayer player) {
        for (int i = 0; i < 9; i++) {
            if (!player.inventory.getStackInSlot(i).isEmpty() && !(player.inventory.getStackInSlot(i).getItem() instanceof ItemBow) &&
                    !(player.inventory.getStackInSlot(i).getItem() instanceof ItemMap) &&
                    !(player.inventory.getStackInSlot(i).getItem() instanceof ItemPotion) &&
                    !(player.inventory.getStackInSlot(i).getItem() instanceof ItemEmptyMap) &&
                    !(player.inventory.getStackInSlot(i).getItem() instanceof ItemSnowball) &&
                    player.inventory.getStackInSlot(i).getItem() != Items.GOLD_INGOT &&
                    player.inventory.getStackInSlot(i).getItem() != Items.COMPASS &&
                    player.inventory.getStackInSlot(i).getItem() != Items.ARROW)
                return true;
        }
        return false;
    }

}