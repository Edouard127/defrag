package com.lambda.client.module.modules.movement

import com.lambda.client.event.Phase
import com.lambda.client.event.events.OnUpdateWalkingPlayerEvent
import com.lambda.client.event.events.PlayerTravelEvent
import com.lambda.client.event.listener.listener
import com.lambda.client.module.Category
import com.lambda.client.module.Module
import com.lambda.client.util.MovementUtils
import com.lambda.client.util.MovementUtils.calcMoveYaw
import com.lambda.client.util.PacketEvent
import com.lambda.client.util.threads.safeListener
import net.minecraft.network.play.client.CPacketPlayer
import net.minecraft.network.play.server.SPacketCloseWindow
import kotlin.math.cos
import kotlin.math.sin

object PacketFlyExploit : Module(
    name = "PacketFly",
    description = "Allows you to fly by exploiting NoCheatPlus",
    category = Category.MOVEMENT
) {

    val mode by setting("Mode", Mode.FAST)
    val ySpeed by setting("YSpeed", 0.05, 0.01..1.0, 0.01)
    val delay by setting("Delay", 1, 0..20, 1)

    var timer = 0


    init {
        safeListener<PlayerTravelEvent> {
            if (mode == Mode.FAST) {

                timer++
                if (timer < delay) {
                    return@safeListener
                }
                timer = 0


                if (mc.gameSettings.keyBindJump.isKeyDown) {
                    mc.player.connection.sendPacket(CPacketPlayer.PositionRotation(mc.player.posX, mc.player.posY - ySpeed, mc.player.posZ, 0f, 0f, mc.player.onGround))
                } else if (mc.gameSettings.keyBindSneak.isKeyDown) {
                    mc.player.connection.sendPacket(CPacketPlayer.PositionRotation(mc.player.posX, mc.player.posY + ySpeed, mc.player.posZ, 0f, 0f, mc.player.onGround))
                }

                mc.player.connection.sendPacket(CPacketPlayer.PositionRotation(mc.player.posX, -1337.0, mc.player.posZ, 0f, 0f, true))
            } else if (mode == Mode.OLD) {
                it.cancel()

                player.motionY = if (mc.gameSettings.keyBindJump.isKeyDown xor mc.gameSettings.keyBindSneak.isKeyDown) {
                    if (mc.gameSettings.keyBindJump.isKeyDown) {
                        0.0622
                    }
                    else -0.0622
                } else {
                    if (MovementUtils.isInputting) {
                        val yaw = calcMoveYaw()
                        player.motionX = -sin(yaw) * 0.2f
                        player.motionZ = cos(yaw) * 0.2f
                    }
                    -ySpeed
                }

                val posX = player.posX + player.motionX
                val posY = player.posY + player.motionY
                val posZ = player.posZ + player.motionZ

                connection.sendPacket(CPacketPlayer.PositionRotation(posX, posY, posZ, player.rotationYaw, player.rotationPitch, false))
                connection.sendPacket(CPacketPlayer.Position(posX, player.posY - 42069, posZ, true))
            }
        }

        listener<OnUpdateWalkingPlayerEvent> {
            if (mode == Mode.OLD && it.phase == Phase.PRE) {
                return@listener
            }
        }

        listener<PacketEvent.Receive> {
            if (mode == Mode.OLD && it.packet is SPacketCloseWindow) {
                it.cancel()
            }
        }
    }

    enum class Mode {
        OLD,
        FAST,
        VANILLA // todo: vanilla mode (for phasing)
    }
}